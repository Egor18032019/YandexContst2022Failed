
C. Приснится же такое...
Язык 	Ограничение времени 	Ограничение памяти 	Ввод 	Вывод
Все языки 	2 секунды 	512Mb 	стандартный ввод или input.txt 	стандартный вывод или output.txt
Python 3.7.3 	3 секунды 	512Mb
Python 3.7 (PyPy 7.3.3) 	3 секунды 	512Mb
Scala 2.13.4 	3 секунды 	512Mb
OpenJDK Java 15 	3 секунды 	512Mb
PHP 7.3.5 	3 секунды 	512Mb
Kotlin 1.5.32 (JRE 11) 	3 секунды 	512Mb
Наконец-то с царством Морфея удалось наладить дипломатические отношения! Первым делом в магазины поступили самые корректные и полные сонники, составленные в сотрудничестве с главными сномагами царства.

Ваш близкий друг Тирания Вампадур купила такой сонник одной из первых. Но тут же её ждало разочарование. Оказалось, что некоторые сны образуют целую последовательность сюжетов, которую надо интерпретировать только целиком.

И у Тирании оказалась именно такая ситуация. Когда-то давно ей приснилось двоичное дерево из N вершин, занумерованных целыми числами от 1 до N.

Вершина 1 являлась корнем. У каждой вершины v было до двух сыновей: левый имел номер 2⋅v, правый — 2⋅v+1 (при условии, что их номера не превосходили N). Таким образом, зная число N, дерево можно было однозначно восстановить.

Но, к сожалению, следующие Q ночей Тирании снились похожие сны: одна из вершин дерева v менялась местами с её предком (если v была корнем дерева, то ничего не происходило). Причем эти изменения переносились между снами, всё больше и больше изменяя оригинальное дерево.

Чтобы верно интерпретировать значение снов, Тирании нужно узнать итоговую структуру дерева после всех произошедших с ним изменений. Она просит вас помочь ей и по последовательности менявшихся вершин найти итоговую структуру дерева из её снов.

Понимая, что в этом деле важна точность, вы расспросили Тиранию насчет процесса обмена местами вершины v с её предком.

Введем обозначения:

    p — предок вершины v, pp — предок вершины p (если таковые существуют);
    vl — левый ребенок v, vr — правый ребенок v;
    pl — левый ребенок p, pr — правый ребенок p.

В таком случае обмен задаётся следующими условиями:

    Изменение предка: если p — левый ребенок вершины pp, то v становится левым ребенком pp, иначе — правым.
    если v — левый ребенок вершины p, то:
        p становится левым ребенком v;
        vr остаётся правым ребенком v;
        vl становится левым ребенком p;
        pr остаётся правым ребенком p.

    PIC 	PIC

    аналогично, если v — правый ребенок вершины p, то:
        p становится правым ребенком v;
        vl остаётся левым ребенком v;
        vr становится правым ребенком p;
        pl остаётся левым ребенком p.

    PIC 	PIC

Формат ввода
Первая строка содержит два целых числа N и Q (1≤N≤750;1≤Q≤106) — количество вершин в дереве и количество изменений, произошедших с деревом.

В следующей строке дано Q целых чисел v1, v2, …, vq (1≤vi≤N), где vi — номер вершины, обменявшейся местами со своим предком в i-ю ночь.
Формат вывода
В единственной строке через пробел требуется вывести номера вершин дерева после всех изменений в формате LVR, начиная с корня дерева.

Формат LVR(v) определяется рекурсивно для вершины v.

    если у вершины v есть левый ребенок lv, то сначала выводится всё поддерево lv в формате LVR(lv);
    выводится номер вершины v;
    если у вершины v есть правый ребенок rv, то выводится всё поддерево rv в формате LVR(rv);

Пример
Ввод
Вывод

10 6
5 7 4 7 8 7



7 10 5 2 8 4 9 1 6 3

Примечания
Объяснение примера строится из двух частей:

    Рисунки, показывающие структуру дерева в каждом сне;
    Текстовое пояснение к выводу на тест;

В тестовом примере дано дерево из 10 вершин:

PIC

Происходит 6 изменений с деревом:

    вершина 5 меняется с вершиной 2:

    PIC

    вершина 7 меняется с вершиной 3:

    PIC

    вершина 4 меняется с вершиной 2:

    PIC

    вершина 7 меняется с вершиной 1:

    PIC

    вершина 8 меняется с вершиной 2:

    PIC

    вершина 7 ни с кем не меняется, так как она уже корень:

    PIC

После всех изменений выводим получившееся дерево в формате LVR:

    Корень дерева — вершина 7;
    Выводим вершину 7;
    Выводим поддерево вершины 1 — правого ребенка вершины 7;
    Выводим поддерево вершины 5 — левого ребенка вершины 1;
    Выводим поддерево вершины 10 — левого ребенка вершины 5;
    Выводим вершину 10;
    Выводим вершину 5;
    Выводим поддерево вершины 4 — правого ребенка вершины 5;
    Выводим поддерево вершины 8 — левого ребенка вершины 4;
    Выводим поддерево вершины 2 — левого ребенка вершины 8;
    Выводим вершину 2;
    Выводим вершину 8;
    Выводим вершину 4;
    Выводим поддерево вершины 9 — правого ребенка вершины 4;
    Выводим вершину 9;
    Выводим вершину 1;
    Выводим поддерево вершины 3 — правого ребенка вершины 1;
    Выводим поддерево вершины 6 — левого ребенка вершины 3;
    Выводим вершину 6;
    Выводим вершину 3;
